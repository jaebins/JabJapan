[{"C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\index.js":"1","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\TranslateApp.js":"2","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\suhyeon.js":"3","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\PracticeApp.js":"4","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\reportWebVitals.js":"5","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\sources\\dictionary_Word.js":"6","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\translate\\saveWordMap\\saveWordMap.js":"7","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\head.js":"8","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\practice_Body.js":"9","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\practice_Neck.js":"10","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\translate\\translate_Neck.js":"11","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\practice_Foot.js":"12","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\translate\\translate_Body.js":"13","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\practice_SelectMode.js":"14"},{"size":1091,"mtime":1685521594682,"results":"15","hashOfConfig":"16"},{"size":11001,"mtime":1685517084574,"results":"17","hashOfConfig":"16"},{"size":1253,"mtime":1685519195223,"results":"18","hashOfConfig":"16"},{"size":4607,"mtime":1685517084573,"results":"19","hashOfConfig":"16"},{"size":375,"mtime":1685517084601,"results":"20","hashOfConfig":"16"},{"size":221,"mtime":1685517084579,"results":"21","hashOfConfig":"16"},{"size":3538,"mtime":1685521262017,"results":"22","hashOfConfig":"16"},{"size":196,"mtime":1685517084574,"results":"23","hashOfConfig":"16"},{"size":1493,"mtime":1685517084575,"results":"24","hashOfConfig":"16"},{"size":635,"mtime":1685517084577,"results":"25","hashOfConfig":"16"},{"size":514,"mtime":1685517084599,"results":"26","hashOfConfig":"16"},{"size":265,"mtime":1685517084576,"results":"27","hashOfConfig":"16"},{"size":1859,"mtime":1685517084599,"results":"28","hashOfConfig":"16"},{"size":422,"mtime":1685517084577,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"3nlddb",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\index.js",["79"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport TranslateApp from './TranslateApp';\r\nimport PracticeApp from './PracticeApp';\r\nimport SaveWordMap from \"./components/translate/saveWordMap/saveWordMap\"\r\nimport Dictionary_Word from \"./components/practice/sources/dictionary_Word\"\r\nimport \"./components/index.css\"\r\nimport Suhyeon from \"./suhyeon\"\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route element={<TranslateApp/>} path=\"/\"></Route>\r\n        <Route element={<PracticeApp/>} path=\"/practice\"></Route>\r\n        <Route element={<Dictionary_Word/>} path=\"/dictionary_Word\"></Route>\r\n        <Route element={<SaveWordMap/>} path=\"/saveWordMap\"></Route>\r\n        <Route element={<Suhyeon/>} path=\"/suhyeon\"></Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\TranslateApp.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],[],"import './components/translate/translate.css';\r\nimport './components/practice/practice.css';\r\nimport Head from \"./components/head\";\r\nimport Neck from \"./components/translate/translate_Neck\"\r\nimport Body from \"./components/translate/translate_Body\";\r\nimport { useEffect, useState } from 'react';\r\nimport Cookies from \"react-cookies\"\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport * as Hangul from 'hangul-js';\r\n\r\nfunction TranslateApp() {\r\n  const hiragana_original = \"あかさたなはまやらわがざだばぱ\" +\r\n    \"いきしちにひみりゐぎじぢびぴ\" +\r\n    \"うくすつぬふむゆるぐずづぶぷ\" +\r\n    \"えけせてねへめれゑげぜでべぺ\" +\r\n    \"おこそとのほもよろをごぞどぼぽ\" +\r\n    \"ゔ\" +\r\n    \"アカサタナイキシチニウクスツヌエケセテネオコソトノ\" +\r\n    \"ヴハマヤラヒミリフムユルヘメレホモヨロ\" +\r\n    \"ワガザダバパヰギジヂビピグズヅブプヱゲゼデベペヲゴゾドボポ\";\r\n\r\n  const hiragana = \"あかさたなはまやらわがざだばぱ\" +\r\n    \"いきしちにひみりぎじびぴ\" +\r\n    \"うくすつぬふむゆるぐずぶぷ\" +\r\n    \"えけせてねへめれげぜでべぺ\" +\r\n    \"おこそとのほもよろをごぞどぼぽ\" +\r\n    \"アカサタナイキシチニウクスツヌエケセテネオコソトノ\" + // 가타카나\r\n    \"ハマヤラヒミリフムユルヘメレホモヨロ\" +\r\n    \"ワガザダバパギジビピグズヅブプ\" +\r\n    \"ゲゼデベペヲゴゾドボポ\";\r\n  const hiragana_ko = \"아카사타나하마야라와\" +\r\n    \"가자다바파이키시치니히미리기지비피우쿠스츠누\" +\r\n    \"푸무유루구즈부푸에케세테네헤메레게제데베페\" +\r\n    \"오코소토노호모요로워고조도보포\" +\r\n    \"아카사타나이키시치니우쿠수츠누에케세테네오코소토노\" + // 가타카나\r\n    \"하마야라히미리푸무유루헤메레호모요로\" +\r\n    \"와가자다바파기지비피구주주부푸\" +\r\n    \"게제데베페워고조도보포\";\r\n\r\n  const server_URL = \"\";\r\n  // const server_URL = \"http://localhost:8001\"\r\n  \r\n  const [transMode, setTransMode] = useState({ // 현재 번역 모드 (targetLan = ja : 일본어 발음을 한국어로, ko : 한국어를 일본어 발음으로)\r\n    targetLan: \"ja\",\r\n    resultLan: \"ko\"\r\n  });\r\n  const [result, setResult] = useState({ // 화면에 보여질 결과\r\n    japanese_rs: \"\",\r\n    korean_rs: \"\",\r\n  })\r\n  const [rsCounter, setRsCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if(!isNaN(Cookies.load(\"rsCounter\"))){\r\n      setRsCounter(Number(Cookies.load(\"rsCounter\")) + 1);\r\n    }\r\n  }, [])\r\n\r\n  const isSmallScreen = useMediaQuery({maxWidth: 500});\r\n  \r\n\r\n  // 번역 모드를 바꿔주는 이벤트\r\n  const changeMode = () => {\r\n    var input = document.getElementById(\"translate-body-workingArea-inputArea-inputTarget\");\r\n\r\n    if (transMode.targetLan == \"ja\") {\r\n      setTransMode({\r\n        targetLan: \"ko\",\r\n        resultLan: \"ja\",\r\n      });\r\n      \r\n      input.placeholder = \"단어를 입력해주세요.\";\r\n    }\r\n    else {\r\n      setTransMode({\r\n        targetLan: \"ja\",\r\n        resultLan: \"ko\"\r\n      });\r\n      input.placeholder = \"일본식 발음으로 정확하게 입력해주세요.\";\r\n    }\r\n\r\n    input.value = \"\";\r\n  }\r\n\r\n  const checkOnlyJapanese = (char) => {\r\n    for (let i = 0; i < char.length; i++) {\r\n      if (!hiragana_original.includes(char[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // targetText를 해당하는 발음으로 바꿔주는 이벤트\r\n  const convert_Pronunciation = (targetText, findArr, matchArr, checkTransOriginalWord) => {\r\n    let convert_target = \"\";\r\n    if(findArr.length < 1){ // 일본어와 한자를 분리해주는 작업이라면\r\n      convert_target = targetText;\r\n    }\r\n    let backup = {\r\n      thieroglyph: \"\",\r\n      japanese: \"\"\r\n    }\r\n\r\n    let getJapanPronunciation_InResultJp = false;\r\n    if (targetText[targetText.length - 1] == \"t\") { // 만약 targetText가 한자가 없는 순수한 일본어이면 한자와 나누지 않음 \r\n      getJapanPronunciation_InResultJp = true;\r\n      targetText = targetText.substr(0, targetText.length - 1);\r\n    }\r\n\r\n    for (let i = 0; i < targetText.length; i++) {\r\n      let char = targetText[i];\r\n      let append_N = \"\";\r\n\r\n      if (transMode.resultLan == \"ko\" && !checkTransOriginalWord) { // 일본어 발음을 알려고 한다면\r\n        let cuttingHangul = Hangul.disassemble(targetText[i]);\r\n        if(cuttingHangul[1] == \"ㅐ\" || cuttingHangul[1] == \"ㅒ\" || cuttingHangul[1] == \"ㅖ\"){ \r\n          cuttingHangul[1] = \"ㅔ\"\r\n          char = Hangul.assemble(cuttingHangul);\r\n        }\r\n        if (cuttingHangul.length > 2 && char != \"와\" && char != \"워\") { // 한글 받침 제거\r\n          cuttingHangul.length = 2;\r\n          char = Hangul.assemble(cuttingHangul);\r\n          append_N = \"ん\";\r\n          // console.log(\"ㄴ 확인\");\r\n        }\r\n      }\r\n\r\n      let index = findArr.indexOf(char);\r\n      if (index != -1 && (transMode.resultLan == \"ko\" || hiragana_original.includes(char))) {\r\n        convert_target += matchArr[index];\r\n        convert_target += append_N // 일본어 ㄴ 발음 확인\r\n      }\r\n      // 일본어를 한국어로 바꿀 때, 일본어에서 ん 또는 ン를 찾는다면 받침 ㄴ을 추가해줌\r\n      else if (index == -1 && (transMode.resultLan == \"ja\" || checkTransOriginalWord) && (char == \"ん\" || char == \"ン\") && findArr.length > 0) {\r\n        // console.log(\"ん ン 확인 - \", convert_target[convert_target.length - 1]);\r\n        let char_append_N = Hangul.disassemble(convert_target[convert_target.length - 1])\r\n        char_append_N.push(\"ㄴ\")\r\n        char_append_N = Hangul.assemble(char_append_N);\r\n        convert_target = convert_target.substr(0, convert_target.length - 1);\r\n        convert_target += char_append_N;\r\n      }\r\n      // 일본어를 한국어로 바꿀 때, 한자를 찾는다면 분리해줌\r\n      else if (index == -1 && (transMode.resultLan == \"ja\" || checkTransOriginalWord) &&\r\n      !checkOnlyJapanese(char) && !getJapanPronunciation_InResultJp && char != \" \" && !(char == \"ん\" || char == \"ン\")) {\r\n        let temp = backup.thieroglyph + targetText[i];\r\n        targetText = targetText.replace(targetText[i], \"\");\r\n        backup = {\r\n          thieroglyph: temp,\r\n          japanese: targetText,\r\n        }\r\n        // console.log(\"한자 확인\", temp, \"일본어 : \", backup.japanese);\r\n        convert_target = `${backup.thieroglyph} & ${backup.japanese}`;\r\n        i--; // 문자수가 빠졌기 때문에 반복문 변수를 1 빼줌\r\n      }\r\n    }\r\n\r\n    return convert_target;\r\n  }\r\n\r\n  const checkMode = (targetText, checkTransOriginalWord) => {\r\n    let convert_target = targetText;\r\n    if (!checkTransOriginalWord.checked && transMode.resultLan == \"ko\") { // 일본어 발음을 알려고 한다면\r\n      convert_target = convert_Pronunciation(targetText, hiragana_ko, hiragana, checkTransOriginalWord.checked);\r\n    }\r\n    return convert_target;\r\n  }\r\n\r\n  const setCookieAndResult = (rs) => {\r\n    let tempRs = {\r\n      japanese_rs: rs.originalJapanese_rs != \"\" ? rs.originalJapanese_rs : rs.japanese_rs,\r\n      korean_rs: rs.originalKorean_rs != \"\" ? rs.originalKorean_rs : rs.korean_rs,\r\n    }\r\n    setRsCounter(rsCounter + 1);\r\n    Cookies.save(\"rs\" + Number(rsCounter + 1), tempRs);\r\n    Cookies.save(\"rsCounter\", rsCounter);\r\n    setResult(rs);\r\n  }\r\n\r\n  const jaMode_OriginalTranslate = (originalText, convert_target, rs) => {\r\n    const url = server_URL + `/translate?text=${convert_target}`;\r\n\r\n    fetch(url)\r\n      .then((res) => {\r\n        return res.json()\r\n      }).then((rs) => {\r\n        rs.originalJapanese_rs = originalText;\r\n        rs.originalKorean_rs = \"\";\r\n        rs.korean_rs = rs.message.result.translatedText;\r\n        rs.japanese_rs = convert_Pronunciation(convert_target, hiragana, hiragana_ko, true);\r\n        setCookieAndResult(rs);\r\n      })\r\n  }\r\n\r\n  const jaMode_Translate = (doc, rs, backupText) => {\r\n    rs.japanese_rs = backupText;\r\n    if (doc.querySelectorAll(\".txt_search\").length > 1) {\r\n      rs.korean_rs = !checkOnlyJapanese(doc.querySelectorAll(\".txt_search\")[1].innerText) ? // 만약 일본어가 들어있는게 아니라면 두번째 의미까지 추가해줌\r\n        doc.querySelectorAll(\".txt_search\")[1].innerText + \", \" : \"\";\r\n    }\r\n    rs.korean_rs += `${doc.querySelectorAll(\".txt_search\")[0].innerText}`;\r\n\r\n    return rs;\r\n  }\r\n\r\n  const koMode_translate = (doc, rs) => {\r\n    let parsingRs = doc.querySelectorAll(\".kujk_type > .search_word > .tit_searchword > .txt_searchword\");\r\n    if(parsingRs.length < 1){\r\n      parsingRs = doc.querySelectorAll(\".kukj_type > .list_search > li > .txt_search\");\r\n    }\r\n    \r\n    rs.japanese_rs = parsingRs[0].innerText;\r\n    rs.korean_rs = convert_Pronunciation(rs.japanese_rs + \"t\", hiragana, hiragana_ko, false);\r\n    rs.japanese_rs = convert_Pronunciation(rs.japanese_rs, [], [], false); // 한자와 일본어를 분리하는 작업\r\n    \r\n    return rs;\r\n  }\r\n\r\n  // input에 입력된 데이터를 번역시켜주는 이벤트\r\n  const translate = () => {\r\n\r\n    const targetText = document.getElementById(\"translate-body-workingArea-inputArea-inputTarget\").value;\r\n    if (targetText.length < 1) {\r\n      return;\r\n    }\r\n\r\n    const checkTransOriginalWord = document.getElementById(\"translate-body-workingArea-inputArea-checkTransOriginalWord\");\r\n    let rs = {\r\n      japanese_rs: \"\",\r\n      originalJapanese_rs: \"\",\r\n      korean_rs: \"\",\r\n      originalKorean_rs: \"\"\r\n    }\r\n\r\n    let convert_target = checkMode(targetText, checkTransOriginalWord);\r\n\r\n    if (checkTransOriginalWord.checked && transMode.resultLan == \"ko\") { // 일본어 그대로 변역할려고 한다면\r\n      jaMode_OriginalTranslate(targetText, convert_target, checkTransOriginalWord, rs)\r\n    }\r\n    else {\r\n      const url = server_URL + `/findWord/?q=${convert_target}`;\r\n\r\n      fetch(url)\r\n          .then(res => {\r\n            return res.text();\r\n          }).then(html => {\r\n            let parser = new DOMParser();\r\n            let doc = parser.parseFromString(html, \"text/html\");\r\n            \r\n            if(transMode.resultLan == \"ja\"){ // 한국어를 일본어로\r\n              rs.originalKorean_rs = targetText;\r\n              rs = koMode_translate(doc, rs);\r\n            }\r\n            else{\r\n              rs = jaMode_Translate(doc, rs, convert_target); // 한국어 발음 일본어를 일본어로\r\n            }\r\n\r\n            setCookieAndResult(rs);\r\n          }).catch((err) => {\r\n            alert(err);\r\n          })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"TranslateApp\">\r\n      <Head title={\"TranslateMode\"} link=\"/\"></Head>\r\n      <Neck isSmallScreen={isSmallScreen}></Neck>\r\n      <Body changeMode={changeMode} translate={translate} transMode={transMode} result={result}></Body>\r\n    </div>\r\n  );\r\n}\r\nexport default TranslateApp;\r\n","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\suhyeon.js",["104","105","106","107"],[],"import \"./components/suhyeonBirthday/suhyeon.css\"\r\nimport cat from \"./components/suhyeonBirthday/source/happy.gif\" \r\nimport img_1 from \"./components/suhyeonBirthday/source/1.gif\" \r\nimport img_2 from \"./components/suhyeonBirthday/source/2.gif\" \r\nimport img_3 from \"./components/suhyeonBirthday/source/3.gif\" \r\n\r\nexport default function suhyeon(){\r\n    return(\r\n        <div className=\"suhyeon\">\r\n            <div className=\"suhyeon-head\">\r\n                <div id=\"suhyeon-head-title\">★ 위대하시고 고귀하신 ★</div><br/>\r\n                <div id=\"suhyeon-head-title\">★ 수현 동지 탄신일을 ★</div><br/>\r\n                <div id=\"suhyeon-head-title\">★ 인민 장재빈은 ★</div><br/>\r\n                <div id=\"suhyeon-head-title\">★ 진심으로 ★</div><br/>\r\n                <div id=\"suhyeon-head-title\">★ 축하드리겠습네다! ★</div><br/>\r\n            </div>\r\n            <div className=\"suhyeon-body\">\r\n                <img id=\"suhyeon-body-sources\" src={cat}></img>\r\n                <img id=\"suhyeon-body-sources\" src={img_1}></img>\r\n                <img id=\"suhyeon-body-sources\" src={img_2}></img>\r\n                <img id=\"suhyeon-body-sources\" src={img_3}></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\PracticeApp.js",["108"],[],"import \"./components/practice/practice.css\"\r\nimport {useEffect, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\"\r\nimport Head from \"./components/head\";\r\nimport Neck from \"./components/practice/practice_Neck\";\r\nimport Body from \"./components/practice/practice_Body\";\r\nimport Foot from \"./components/practice/practice_Foot\";\r\n\r\nconst hiragana = \"あかさたなはまやらわがざだばぱ\" +\r\n          \"いきしちにひみりゐぎじぢびぴ\" +\r\n          \"うくすつぬふむゆるぐずづぶぷ\" +\r\n          \"えけせてねへめれゑげぜでべぺ\" +\r\n          \"おこそとのほもよろをごぞどぼぽ\" +\r\n          \"ゔん\";\r\nconst hiraganaEn = \"a ka sa ta na ha ma ya ra wa ga za da ba pa \" +\r\n    \"i ki shi chi ni hi mi ri wi gi ji dji bi pi \" +\r\n    \"u ku su tsu nu fu mu yu ru gu zu dzu bu pu \" +\r\n    \"e ke se te ne he me re we ge ze de be pe \" +\r\n    \"o ko so to no ho mo yo ro wo go zo do bo po \" +\r\n    \"v n\";\r\nconst katakana = \"アカサタナイキシチニウクスツヌエケセテネオコソトノ\" +\r\n    \"ヴンハマヤラヒミリフムユルヘメレホモヨロ\" +\r\n    \"ワガザダバパヰギジヂビピグズヅブプヱゲゼデベペヲゴゾドボポ\";\r\nconst katakanaEn = \"a ka sa ta na i ki shi chi ni u ku su tsu nu e ke se te ne o ko so to no v n \" +\r\n    \"ha ma ya ra hi mi ri fu mu yu ru he me re ho mo yo ro \" +\r\n    \"wa ga za da ba pa wi gi ji dji bi pi gu zu dzu bu pu \" +\r\n    \"we ge ze de be pe wo go zo do bo po\";\r\n\r\nvar hiragana_Arr = [];\r\nvar hiraganaEn_Arr = [];\r\nvar katakana_Arr = [];\r\nvar katakanaEn_Arr = [];\r\n  \r\nfunction makeArr(){\r\n    for(var i = 0; i < hiragana.length; i++){\r\n      hiragana_Arr[i] = hiragana[i];\r\n    }\r\n    for(i = 0; i < katakana.length; i++){\r\n      katakana_Arr[i] = katakana[i];\r\n    }\r\n\r\n    hiraganaEn_Arr = hiraganaEn.split(' ');\r\n    katakanaEn_Arr = katakanaEn.split(' ');\r\n}\r\n\r\nfunction rand(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nfunction App() {\r\n  const [isStart, setIsStart] = useState(false);\r\n  const [answelInfor, setAnswelInfor] = useState({\r\n    type: '',\r\n    mode: '',\r\n    tarEn_Arr: [],\r\n    question: '',\r\n    answel: '',\r\n    answelNum: 0,\r\n  })\r\n  const [options, setOptions] = useState([])\r\n  \r\n  const isSmallScreen = useMediaQuery({maxWidth: 500})\r\n\r\n  useEffect(() => {\r\n    if(hiragana_Arr.length === 0){\r\n      makeArr();\r\n    }\r\n  }, [])\r\n\r\n  var createQuestion = (type, mode) => {\r\n    var tar_Arr = katakana_Arr;\r\n    var tarEn_Arr = katakanaEn_Arr;\r\n    if(type === \"Hiragana\"){\r\n      tar_Arr = hiragana_Arr;\r\n      tarEn_Arr = hiraganaEn_Arr;\r\n    }\r\n\r\n    var questionIndex = rand(0, tar_Arr.length);\r\n    var question = tar_Arr[questionIndex];\r\n    var answel = tarEn_Arr[questionIndex];\r\n    var answelNum = rand(0, 3);\r\n    \r\n    var answelInfor_dummy = {\r\n      type: type,\r\n      mode: mode,\r\n      tarEn_Arr: tarEn_Arr,\r\n      question: question,\r\n      answel: answel,\r\n      answelNum: answelNum,\r\n    };\r\n    setAnswelInfor(answelInfor_dummy);\r\n\r\n    if(!isStart){\r\n      setIsStart(true);\r\n    }\r\n  }\r\n\r\n  // 리엑트는 비동기이기 때문에 문제가 만들어지면 선택지가 만들어짐(answelInfor 객체가 채워질 때 실행됨)\r\n  useEffect(() => {\r\n    var optionArr = []\r\n\r\n    for(var i = 0; i < 3; i++){\r\n      do{\r\n        var ranIndex = rand(0, answelInfor.tarEn_Arr.length);\r\n        optionArr[i] = answelInfor.tarEn_Arr[ranIndex];\r\n      }while(optionArr[i] === answelInfor.answel)\r\n      if(answelInfor.answelNum === i){\r\n        optionArr[i] = answelInfor.answel;\r\n      }\r\n    }\r\n\r\n    setOptions(optionArr); \r\n  }, [answelInfor])\r\n\r\n  var selectOption = (num) => {\r\n    if(num === answelInfor.answelNum){\r\n      createQuestion(answelInfor.type, answelInfor.mode);\r\n    }\r\n    else{\r\n      alert(\"오답!\");\r\n    }\r\n  }\r\n\r\n  var inputAnswel = () => {\r\n    if(window.event.keyCode == \"13\"){\r\n      var input = document.getElementById(\"practice-body-user-write-input\")\r\n      if(answelInfor.answel === input.value){\r\n        createQuestion(answelInfor.type, answelInfor.mode);\r\n      }\r\n      else{\r\n        alert(\"오답!\");\r\n      }\r\n    }\r\n    input.value = \"\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"PracticeApp\">\r\n      <Head title={\"PracticeMode\"} link=\"/practice\"></Head>\r\n      <Neck isSmallScreen={isSmallScreen} createQuestion={createQuestion}></Neck>  \r\n      <Body answelInfor={answelInfor} selectOption={selectOption} options={options} inputAnswel={inputAnswel} isStart={isStart}></Body>\r\n      <Foot></Foot>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\reportWebVitals.js",[],[],"C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\sources\\dictionary_Word.js",["109"],[],"import dictionaryImg from \"./dictionary.jpg\"\r\n// 521 550\r\nexport default function Dictionary_Word(){\r\n    return(\r\n        <div className=\"Dicionary\">\r\n            <img src={dictionaryImg}></img>\r\n        </div>\r\n    )\r\n}","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\translate\\saveWordMap\\saveWordMap.js",["110"],[],"import \"./saveWordMap.css\"\r\nimport Head from \"../../head\"\r\nimport Cookies from \"react-cookies\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst pagePerWords = 7;\r\n\r\nexport default function SaveWordMap(){\r\n    const[result, setResult] = useState([]);\r\n    const[rsCounter, setRsCounter] = useState(0);\r\n    const[page, setPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let cookies = Cookies.loadAll();\r\n        setRsCounter(Number(Cookies.load(\"rsCounter\")) + 1);\r\n        let tempResultArr = []\r\n        console.log(cookies)\r\n\r\n        if(Object.keys(cookies).length > 0 && !isNaN(rsCounter)){\r\n            for(let i = 1; i < Object.keys(cookies).length; i++){\r\n                let jsonObj = JSON.parse(cookies[\"rs\" + i]);\r\n                tempResultArr.push(jsonObj);\r\n            }\r\n        }\r\n\r\n        setResult(tempResultArr);\r\n    }, [])\r\n    \r\n    const changePage = (addPage) => {\r\n        if(addPage > 0 && (page + 1) * pagePerWords < rsCounter){\r\n            setPage(page + addPage);\r\n        }\r\n        else if(addPage < 0 && page > 0){\r\n            setPage(page + addPage);\r\n        }\r\n    }\r\n\r\n    const removeAllRecord = () => {\r\n        for(let i = 0; i < rsCounter + 1; i++){\r\n            Cookies.remove(\"rs\" + i);\r\n        }\r\n        Cookies.remove(\"rsCounter\");\r\n        alert(\"기록이 지워졌습니다.\");\r\n        setResult([]);\r\n    }\r\n\r\n    return(\r\n        <div className=\"SaveWordMap\">\r\n            <Head title={\"TranslateMode\"} link=\"/\"></Head>\r\n            <div className=\"saveWordMap-body\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>일본어</th>\r\n                            <th>한국어</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            result.length > 0 ?\r\n                            result.map((week, index) => {\r\n                                // 한 페이지에 글이 다섯개가 넘거나 글의 개수가 한도를 초과했을 때 공백을 리턴\r\n                                    if(index + page * pagePerWords >= (page + 1) * pagePerWords || index + (pagePerWords * page) >= result.length){\r\n                                        return \"\";\r\n                                    }\r\n                                    return <tr key={index + (pagePerWords * page)}>\r\n                                        <td>{result[index + (pagePerWords * page)].japanese_rs}</td>\r\n                                        <td>{result[index + (pagePerWords * page)].korean_rs}</td>\r\n                                    </tr>\r\n                                })\r\n                            :\r\n                            \"\"\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"saveWordMap-foot\">\r\n                <div className=\"saveWordMap-foot-movePageControls\">\r\n                    <div id=\"saveWordMap-foot-movePageControls-control\" onClick={() => changePage(-1)}>이전</div>\r\n                    <div id=\"saveWordMap-foot-movePageControls-control\" onClick={() => changePage(1)}>다음</div>\r\n                </div>\r\n                <div id=\"saveWordMap-foot-pageText\">{page + 1}/{rsCounter > pagePerWords ? Math.ceil(rsCounter / pagePerWords) : 1}</div>\r\n                <button id=\"saveWordMap-foot-removeAllRecord\" onClick={() => removeAllRecord()}>기록 지우기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\head.js",[],[],"C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\practice_Body.js",[],[],"C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\practice_Neck.js",[],[],"C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\translate\\translate_Neck.js",[],[],"C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\practice_Foot.js",["111"],[],"export default function Practice_foot(){\r\n    return(\r\n        <div className=\"practice-foot\">\r\n            <a id=\"practice-foot-wordsMap\" onClick={() => window.open(\"/Dictionary_Word\", \"dicionary\", \"width=600; height=600\")}>Dictionary</a>\r\n        </div>\r\n    )\r\n}","C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\translate\\translate_Body.js",[],[],"C:\\Users\\SJ507-5\\jen2063_jabjapan\\src\\components\\practice\\practice_SelectMode.js",[],[],{"ruleId":"112","severity":1,"message":"113","line":19,"column":25,"nodeType":"114","messageId":"115","endLine":19,"endColumn":43},{"ruleId":"116","severity":1,"message":"117","line":66,"column":29,"nodeType":"118","messageId":"119","endLine":66,"endColumn":31},{"ruleId":"116","severity":1,"message":"117","line":106,"column":43,"nodeType":"118","messageId":"119","endLine":106,"endColumn":45},{"ruleId":"116","severity":1,"message":"117","line":115,"column":31,"nodeType":"118","messageId":"119","endLine":115,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":117,"column":29,"nodeType":"118","messageId":"119","endLine":117,"endColumn":31},{"ruleId":"116","severity":1,"message":"117","line":117,"column":56,"nodeType":"118","messageId":"119","endLine":117,"endColumn":58},{"ruleId":"116","severity":1,"message":"117","line":117,"column":83,"nodeType":"118","messageId":"119","endLine":117,"endColumn":85},{"ruleId":"116","severity":1,"message":"120","line":121,"column":46,"nodeType":"118","messageId":"119","endLine":121,"endColumn":48},{"ruleId":"116","severity":1,"message":"120","line":121,"column":61,"nodeType":"118","messageId":"119","endLine":121,"endColumn":63},{"ruleId":"116","severity":1,"message":"120","line":130,"column":17,"nodeType":"118","messageId":"119","endLine":130,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":130,"column":47,"nodeType":"118","messageId":"119","endLine":130,"endColumn":49},{"ruleId":"116","severity":1,"message":"117","line":135,"column":22,"nodeType":"118","messageId":"119","endLine":135,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":135,"column":52,"nodeType":"118","messageId":"119","endLine":135,"endColumn":54},{"ruleId":"116","severity":1,"message":"117","line":135,"column":96,"nodeType":"118","messageId":"119","endLine":135,"endColumn":98},{"ruleId":"116","severity":1,"message":"117","line":135,"column":111,"nodeType":"118","messageId":"119","endLine":135,"endColumn":113},{"ruleId":"116","severity":1,"message":"117","line":144,"column":22,"nodeType":"118","messageId":"119","endLine":144,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":144,"column":52,"nodeType":"118","messageId":"119","endLine":144,"endColumn":54},{"ruleId":"116","severity":1,"message":"120","line":145,"column":77,"nodeType":"118","messageId":"119","endLine":145,"endColumn":79},{"ruleId":"116","severity":1,"message":"117","line":145,"column":94,"nodeType":"118","messageId":"119","endLine":145,"endColumn":96},{"ruleId":"116","severity":1,"message":"117","line":145,"column":109,"nodeType":"118","messageId":"119","endLine":145,"endColumn":111},{"ruleId":"116","severity":1,"message":"117","line":163,"column":64,"nodeType":"118","messageId":"119","endLine":163,"endColumn":66},{"ruleId":"116","severity":1,"message":"120","line":171,"column":43,"nodeType":"118","messageId":"119","endLine":171,"endColumn":45},{"ruleId":"116","severity":1,"message":"120","line":172,"column":39,"nodeType":"118","messageId":"119","endLine":172,"endColumn":41},{"ruleId":"116","severity":1,"message":"117","line":237,"column":63,"nodeType":"118","messageId":"119","endLine":237,"endColumn":65},{"ruleId":"116","severity":1,"message":"117","line":250,"column":36,"nodeType":"118","messageId":"119","endLine":250,"endColumn":38},{"ruleId":"121","severity":1,"message":"122","line":18,"column":17,"nodeType":"114","endLine":18,"endColumn":58},{"ruleId":"121","severity":1,"message":"122","line":19,"column":17,"nodeType":"114","endLine":19,"endColumn":60},{"ruleId":"121","severity":1,"message":"122","line":20,"column":17,"nodeType":"114","endLine":20,"endColumn":60},{"ruleId":"121","severity":1,"message":"122","line":21,"column":17,"nodeType":"114","endLine":21,"endColumn":60},{"ruleId":"116","severity":1,"message":"117","line":125,"column":29,"nodeType":"118","messageId":"119","endLine":125,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":6,"column":13,"nodeType":"114","endLine":6,"endColumn":38},{"ruleId":"123","severity":1,"message":"124","line":27,"column":8,"nodeType":"125","endLine":27,"endColumn":10,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":4,"column":13,"nodeType":"114","endLine":4,"endColumn":130},"react/jsx-pascal-case","Imported JSX component Dictionary_Word must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rsCounter'. Either include it or remove the dependency array.","ArrayExpression",["129"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"130","fix":"131"},"Update the dependencies array to be: [rsCounter]",{"range":"132","text":"133"},[853,855],"[rsCounter]"]