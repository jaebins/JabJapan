{"ast":null,"code":"import _slicedToArray from\"C:/Users/jen20/OneDrive/\\uBC14\\uD0D5 \\uD654\\uBA74/jen2063_jabjapan/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./components/translate/translate.css';import'./components/practice/practice.css';import Head from\"./components/head\";import Neck from\"./components/translate/translate_Neck\";import Body from\"./components/translate/translate_Body\";import{useEffect,useState}from'react';import Cookies from\"react-cookies\";import{useMediaQuery}from'react-responsive';import*as Hangul from'hangul-js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TranslateApp(){var hiragana_original=\"あかさたなはまやらわがざだばぱ\"+\"いきしちにひみりゐぎじぢびぴ\"+\"うくすつぬふむゆるぐずづぶぷ\"+\"えけせてねへめれゑげぜでべぺ\"+\"おこそとのほもよろをごぞどぼぽ\"+\"ゔ\"+\"アカサタナイキシチニウクスツヌエケセテネオコソトノ\"+\"ヴハマヤラヒミリフムユルヘメレホモヨロ\"+\"ワガザダバパヰギジヂビピグズヅブプヱゲゼデベペヲゴゾドボポ\";var hiragana=\"あかさたなはまやらわがざだばぱ\"+\"いきしちにひみりぎじびぴ\"+\"うくすつぬふむゆるぐずぶぷ\"+\"えけせてねへめれげぜでべぺ\"+\"おこそとのほもよろをごぞどぼぽ\"+\"アカサタナイキシチニウクスツヌエケセテネオコソトノ\"+// 가타카나\n\"ハマヤラヒミリフムユルヘメレホモヨロ\"+\"ワガザダバパギジビピグズヅブプ\"+\"ゲゼデベペヲゴゾドボポ\";var hiragana_ko=\"아카사타나하마야라와\"+\"가자다바파이키시치니히미리기지비피우쿠스츠누\"+\"푸무유루구즈부푸에케세테네헤메레게제데베페\"+\"오코소토노호모요로워고조도보포\"+\"아카사타나이키시치니우쿠수츠누에케세테네오코소토노\"+// 가타카나\n\"하마야라히미리푸무유루헤메레호모요로\"+\"와가자다바파기지비피구주주부푸\"+\"게제데베페워고조도보포\";var server_URL=\"\";// const server_URL = \"http://localhost:8001\"\nvar _useState=useState({// 현재 번역 모드 (targetLan = ja : 일본어 발음을 한국어로, ko : 한국어를 일본어 발음으로)\ntargetLan:\"ja\",resultLan:\"ko\"}),_useState2=_slicedToArray(_useState,2),transMode=_useState2[0],setTransMode=_useState2[1];var _useState3=useState({// 화면에 보여질 결과\njapanese_rs:\"\",korean_rs:\"\"}),_useState4=_slicedToArray(_useState3,2),result=_useState4[0],setResult=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),rsCounter=_useState6[0],setRsCounter=_useState6[1];useEffect(function(){if(!isNaN(Cookies.load(\"rsCounter\"))){setRsCounter(Number(Cookies.load(\"rsCounter\"))+1);}},[]);var isSmallScreen=useMediaQuery({maxWidth:500});// 번역 모드를 바꿔주는 이벤트\nvar changeMode=function changeMode(){var input=document.getElementById(\"translate-body-workingArea-inputArea-inputTarget\");if(transMode.targetLan==\"ja\"){setTransMode({targetLan:\"ko\",resultLan:\"ja\"});input.placeholder=\"단어를 입력해주세요.\";}else{setTransMode({targetLan:\"ja\",resultLan:\"ko\"});input.placeholder=\"일본식 발음으로 정확하게 입력해주세요.\";}input.value=\"\";};var checkOnlyJapanese=function checkOnlyJapanese(char){for(var i=0;i<char.length;i++){if(!hiragana_original.includes(char[i])){return false;}}return true;};// targetText를 해당하는 발음으로 바꿔주는 이벤트\nvar convert_Pronunciation=function convert_Pronunciation(targetText,findArr,matchArr,checkTransOriginalWord){var convert_target=\"\";if(findArr.length<1){// 일본어와 한자를 분리해주는 작업이라면\nconvert_target=targetText;}var backup={thieroglyph:\"\",japanese:\"\"};var getJapanPronunciation_InResultJp=false;if(targetText[targetText.length-1]==\"t\"){// 만약 targetText가 한자가 없는 순수한 일본어이면 한자와 나누지 않음 \ngetJapanPronunciation_InResultJp=true;targetText=targetText.substr(0,targetText.length-1);}for(var i=0;i<targetText.length;i++){var char=targetText[i];var append_N=\"\";if(transMode.resultLan==\"ko\"&&!checkTransOriginalWord){// 일본어 발음을 알려고 한다면\nvar cuttingHangul=Hangul.disassemble(targetText[i]);if(cuttingHangul[1]==\"ㅐ\"||cuttingHangul[1]==\"ㅒ\"||cuttingHangul[1]==\"ㅖ\"){cuttingHangul[1]=\"ㅔ\";char=Hangul.assemble(cuttingHangul);}if(cuttingHangul.length>2&&char!=\"와\"&&char!=\"워\"){// 한글 받침 제거\ncuttingHangul.length=2;char=Hangul.assemble(cuttingHangul);append_N=\"ん\";// console.log(\"ㄴ 확인\");\n}}var index=findArr.indexOf(char);if(index!=-1&&(transMode.resultLan==\"ko\"||hiragana_original.includes(char))){convert_target+=matchArr[index];convert_target+=append_N;// 일본어 ㄴ 발음 확인\n}// 일본어를 한국어로 바꿀 때, 일본어에서 ん 또는 ン를 찾는다면 받침 ㄴ을 추가해줌\nelse if(index==-1&&(transMode.resultLan==\"ja\"||checkTransOriginalWord)&&(char==\"ん\"||char==\"ン\")&&findArr.length>0){// console.log(\"ん ン 확인 - \", convert_target[convert_target.length - 1]);\nvar char_append_N=Hangul.disassemble(convert_target[convert_target.length-1]);char_append_N.push(\"ㄴ\");char_append_N=Hangul.assemble(char_append_N);convert_target=convert_target.substr(0,convert_target.length-1);convert_target+=char_append_N;}// 일본어를 한국어로 바꿀 때, 한자를 찾는다면 분리해줌\nelse if(index==-1&&(transMode.resultLan==\"ja\"||checkTransOriginalWord)&&!checkOnlyJapanese(char)&&!getJapanPronunciation_InResultJp&&char!=\" \"&&!(char==\"ん\"||char==\"ン\")){var temp=backup.thieroglyph+targetText[i];targetText=targetText.replace(targetText[i],\"\");backup={thieroglyph:temp,japanese:targetText};// console.log(\"한자 확인\", temp, \"일본어 : \", backup.japanese);\nconvert_target=\"\".concat(backup.thieroglyph,\" & \").concat(backup.japanese);i--;// 문자수가 빠졌기 때문에 반복문 변수를 1 빼줌\n}}return convert_target;};var checkMode=function checkMode(targetText,checkTransOriginalWord){var convert_target=targetText;if(!checkTransOriginalWord.checked&&transMode.resultLan==\"ko\"){// 일본어 발음을 알려고 한다면\nconvert_target=convert_Pronunciation(targetText,hiragana_ko,hiragana,checkTransOriginalWord.checked);}return convert_target;};var setCookieAndResult=function setCookieAndResult(rs){var tempRs={japanese_rs:rs.originalJapanese_rs!=\"\"?rs.originalJapanese_rs:rs.japanese_rs,korean_rs:rs.originalKorean_rs!=\"\"?rs.originalKorean_rs:rs.korean_rs};setRsCounter(rsCounter+1);Cookies.save(\"rs\"+Number(rsCounter+1),tempRs);Cookies.save(\"rsCounter\",rsCounter);setResult(rs);};var jaMode_OriginalTranslate=function jaMode_OriginalTranslate(originalText,convert_target,rs){var url=server_URL+\"/translate?text=\".concat(convert_target);fetch(url).then(function(res){return res.json();}).then(function(rs){rs.originalJapanese_rs=originalText;rs.originalKorean_rs=\"\";rs.korean_rs=rs.message.result.translatedText;rs.japanese_rs=convert_Pronunciation(convert_target,hiragana,hiragana_ko,true);setCookieAndResult(rs);});};var jaMode_Translate=function jaMode_Translate(doc,rs,backupText){rs.japanese_rs=backupText;if(doc.querySelectorAll(\".txt_search\").length>1){rs.korean_rs=!checkOnlyJapanese(doc.querySelectorAll(\".txt_search\")[1].innerText)?// 만약 일본어가 들어있는게 아니라면 두번째 의미까지 추가해줌\ndoc.querySelectorAll(\".txt_search\")[1].innerText+\", \":\"\";}rs.korean_rs+=\"\".concat(doc.querySelectorAll(\".txt_search\")[0].innerText);return rs;};var koMode_translate=function koMode_translate(doc,rs){var parsingRs=doc.querySelectorAll(\".kujk_type > .search_word > .tit_searchword > .txt_searchword\");if(parsingRs.length<1){parsingRs=doc.querySelectorAll(\".kukj_type > .list_search > li > .txt_search\");}rs.japanese_rs=parsingRs[0].innerText;rs.korean_rs=convert_Pronunciation(rs.japanese_rs+\"t\",hiragana,hiragana_ko,false);rs.japanese_rs=convert_Pronunciation(rs.japanese_rs,[],[],false);// 한자와 일본어를 분리하는 작업\nreturn rs;};// input에 입력된 데이터를 번역시켜주는 이벤트\nvar translate=function translate(){var targetText=document.getElementById(\"translate-body-workingArea-inputArea-inputTarget\").value;if(targetText.length<1){return;}var checkTransOriginalWord=document.getElementById(\"translate-body-workingArea-inputArea-checkTransOriginalWord\");var rs={japanese_rs:\"\",originalJapanese_rs:\"\",korean_rs:\"\",originalKorean_rs:\"\"};var convert_target=checkMode(targetText,checkTransOriginalWord);if(checkTransOriginalWord.checked&&transMode.resultLan==\"ko\"){// 일본어 그대로 변역할려고 한다면\njaMode_OriginalTranslate(targetText,convert_target,checkTransOriginalWord,rs);}else{var url=server_URL+\"/findWord/?q=\".concat(convert_target);fetch(url).then(function(res){return res.text();}).then(function(html){var parser=new DOMParser();var doc=parser.parseFromString(html,\"text/html\");if(transMode.resultLan==\"ja\"){// 한국어를 일본어로\nrs.originalKorean_rs=targetText;rs=koMode_translate(doc,rs);}else{rs=jaMode_Translate(doc,rs,convert_target);// 한국어 발음 일본어를 일본어로\n}setCookieAndResult(rs);}).catch(function(err){alert(err);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"TranslateApp\",children:[/*#__PURE__*/_jsx(Head,{title:\"TranslateMode\",link:\"/\"}),/*#__PURE__*/_jsx(Neck,{isSmallScreen:isSmallScreen}),/*#__PURE__*/_jsx(Body,{changeMode:changeMode,translate:translate,transMode:transMode,result:result})]});}export default TranslateApp;","map":{"version":3,"names":["Head","Neck","Body","useEffect","useState","Cookies","useMediaQuery","Hangul","jsx","_jsx","jsxs","_jsxs","TranslateApp","hiragana_original","hiragana","hiragana_ko","server_URL","_useState","targetLan","resultLan","_useState2","_slicedToArray","transMode","setTransMode","_useState3","japanese_rs","korean_rs","_useState4","result","setResult","_useState5","_useState6","rsCounter","setRsCounter","isNaN","load","Number","isSmallScreen","maxWidth","changeMode","input","document","getElementById","placeholder","value","checkOnlyJapanese","char","i","length","includes","convert_Pronunciation","targetText","findArr","matchArr","checkTransOriginalWord","convert_target","backup","thieroglyph","japanese","getJapanPronunciation_InResultJp","substr","append_N","cuttingHangul","disassemble","assemble","index","indexOf","char_append_N","push","temp","replace","concat","checkMode","checked","setCookieAndResult","rs","tempRs","originalJapanese_rs","originalKorean_rs","save","jaMode_OriginalTranslate","originalText","url","fetch","then","res","json","message","translatedText","jaMode_Translate","doc","backupText","querySelectorAll","innerText","koMode_translate","parsingRs","translate","text","html","parser","DOMParser","parseFromString","catch","err","alert","className","children","title","link"],"sources":["C:/Users/jen20/OneDrive/바탕 화면/jen2063_jabjapan/src/TranslateApp.js"],"sourcesContent":["import './components/translate/translate.css';\r\nimport './components/practice/practice.css';\r\nimport Head from \"./components/head\";\r\nimport Neck from \"./components/translate/translate_Neck\"\r\nimport Body from \"./components/translate/translate_Body\";\r\nimport { useEffect, useState } from 'react';\r\nimport Cookies from \"react-cookies\"\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport * as Hangul from 'hangul-js';\r\n\r\nfunction TranslateApp() {\r\n  const hiragana_original = \"あかさたなはまやらわがざだばぱ\" +\r\n    \"いきしちにひみりゐぎじぢびぴ\" +\r\n    \"うくすつぬふむゆるぐずづぶぷ\" +\r\n    \"えけせてねへめれゑげぜでべぺ\" +\r\n    \"おこそとのほもよろをごぞどぼぽ\" +\r\n    \"ゔ\" +\r\n    \"アカサタナイキシチニウクスツヌエケセテネオコソトノ\" +\r\n    \"ヴハマヤラヒミリフムユルヘメレホモヨロ\" +\r\n    \"ワガザダバパヰギジヂビピグズヅブプヱゲゼデベペヲゴゾドボポ\";\r\n\r\n  const hiragana = \"あかさたなはまやらわがざだばぱ\" +\r\n    \"いきしちにひみりぎじびぴ\" +\r\n    \"うくすつぬふむゆるぐずぶぷ\" +\r\n    \"えけせてねへめれげぜでべぺ\" +\r\n    \"おこそとのほもよろをごぞどぼぽ\" +\r\n    \"アカサタナイキシチニウクスツヌエケセテネオコソトノ\" + // 가타카나\r\n    \"ハマヤラヒミリフムユルヘメレホモヨロ\" +\r\n    \"ワガザダバパギジビピグズヅブプ\" +\r\n    \"ゲゼデベペヲゴゾドボポ\";\r\n  const hiragana_ko = \"아카사타나하마야라와\" +\r\n    \"가자다바파이키시치니히미리기지비피우쿠스츠누\" +\r\n    \"푸무유루구즈부푸에케세테네헤메레게제데베페\" +\r\n    \"오코소토노호모요로워고조도보포\" +\r\n    \"아카사타나이키시치니우쿠수츠누에케세테네오코소토노\" + // 가타카나\r\n    \"하마야라히미리푸무유루헤메레호모요로\" +\r\n    \"와가자다바파기지비피구주주부푸\" +\r\n    \"게제데베페워고조도보포\";\r\n\r\n  const server_URL = \"\";\r\n  // const server_URL = \"http://localhost:8001\"\r\n  \r\n  const [transMode, setTransMode] = useState({ // 현재 번역 모드 (targetLan = ja : 일본어 발음을 한국어로, ko : 한국어를 일본어 발음으로)\r\n    targetLan: \"ja\",\r\n    resultLan: \"ko\"\r\n  });\r\n  const [result, setResult] = useState({ // 화면에 보여질 결과\r\n    japanese_rs: \"\",\r\n    korean_rs: \"\",\r\n  })\r\n  const [rsCounter, setRsCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if(!isNaN(Cookies.load(\"rsCounter\"))){\r\n      setRsCounter(Number(Cookies.load(\"rsCounter\")) + 1);\r\n    }\r\n  }, [])\r\n\r\n  const isSmallScreen = useMediaQuery({maxWidth: 500});\r\n  \r\n\r\n  // 번역 모드를 바꿔주는 이벤트\r\n  const changeMode = () => {\r\n    var input = document.getElementById(\"translate-body-workingArea-inputArea-inputTarget\");\r\n\r\n    if (transMode.targetLan == \"ja\") {\r\n      setTransMode({\r\n        targetLan: \"ko\",\r\n        resultLan: \"ja\",\r\n      });\r\n      \r\n      input.placeholder = \"단어를 입력해주세요.\";\r\n    }\r\n    else {\r\n      setTransMode({\r\n        targetLan: \"ja\",\r\n        resultLan: \"ko\"\r\n      });\r\n      input.placeholder = \"일본식 발음으로 정확하게 입력해주세요.\";\r\n    }\r\n\r\n    input.value = \"\";\r\n  }\r\n\r\n  const checkOnlyJapanese = (char) => {\r\n    for (let i = 0; i < char.length; i++) {\r\n      if (!hiragana_original.includes(char[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // targetText를 해당하는 발음으로 바꿔주는 이벤트\r\n  const convert_Pronunciation = (targetText, findArr, matchArr, checkTransOriginalWord) => {\r\n    let convert_target = \"\";\r\n    if(findArr.length < 1){ // 일본어와 한자를 분리해주는 작업이라면\r\n      convert_target = targetText;\r\n    }\r\n    let backup = {\r\n      thieroglyph: \"\",\r\n      japanese: \"\"\r\n    }\r\n\r\n    let getJapanPronunciation_InResultJp = false;\r\n    if (targetText[targetText.length - 1] == \"t\") { // 만약 targetText가 한자가 없는 순수한 일본어이면 한자와 나누지 않음 \r\n      getJapanPronunciation_InResultJp = true;\r\n      targetText = targetText.substr(0, targetText.length - 1);\r\n    }\r\n\r\n    for (let i = 0; i < targetText.length; i++) {\r\n      let char = targetText[i];\r\n      let append_N = \"\";\r\n\r\n      if (transMode.resultLan == \"ko\" && !checkTransOriginalWord) { // 일본어 발음을 알려고 한다면\r\n        let cuttingHangul = Hangul.disassemble(targetText[i]);\r\n        if(cuttingHangul[1] == \"ㅐ\" || cuttingHangul[1] == \"ㅒ\" || cuttingHangul[1] == \"ㅖ\"){ \r\n          cuttingHangul[1] = \"ㅔ\"\r\n          char = Hangul.assemble(cuttingHangul);\r\n        }\r\n        if (cuttingHangul.length > 2 && char != \"와\" && char != \"워\") { // 한글 받침 제거\r\n          cuttingHangul.length = 2;\r\n          char = Hangul.assemble(cuttingHangul);\r\n          append_N = \"ん\";\r\n          // console.log(\"ㄴ 확인\");\r\n        }\r\n      }\r\n\r\n      let index = findArr.indexOf(char);\r\n      if (index != -1 && (transMode.resultLan == \"ko\" || hiragana_original.includes(char))) {\r\n        convert_target += matchArr[index];\r\n        convert_target += append_N // 일본어 ㄴ 발음 확인\r\n      }\r\n      // 일본어를 한국어로 바꿀 때, 일본어에서 ん 또는 ン를 찾는다면 받침 ㄴ을 추가해줌\r\n      else if (index == -1 && (transMode.resultLan == \"ja\" || checkTransOriginalWord) && (char == \"ん\" || char == \"ン\") && findArr.length > 0) {\r\n        // console.log(\"ん ン 확인 - \", convert_target[convert_target.length - 1]);\r\n        let char_append_N = Hangul.disassemble(convert_target[convert_target.length - 1])\r\n        char_append_N.push(\"ㄴ\")\r\n        char_append_N = Hangul.assemble(char_append_N);\r\n        convert_target = convert_target.substr(0, convert_target.length - 1);\r\n        convert_target += char_append_N;\r\n      }\r\n      // 일본어를 한국어로 바꿀 때, 한자를 찾는다면 분리해줌\r\n      else if (index == -1 && (transMode.resultLan == \"ja\" || checkTransOriginalWord) &&\r\n      !checkOnlyJapanese(char) && !getJapanPronunciation_InResultJp && char != \" \" && !(char == \"ん\" || char == \"ン\")) {\r\n        let temp = backup.thieroglyph + targetText[i];\r\n        targetText = targetText.replace(targetText[i], \"\");\r\n        backup = {\r\n          thieroglyph: temp,\r\n          japanese: targetText,\r\n        }\r\n        // console.log(\"한자 확인\", temp, \"일본어 : \", backup.japanese);\r\n        convert_target = `${backup.thieroglyph} & ${backup.japanese}`;\r\n        i--; // 문자수가 빠졌기 때문에 반복문 변수를 1 빼줌\r\n      }\r\n    }\r\n\r\n    return convert_target;\r\n  }\r\n\r\n  const checkMode = (targetText, checkTransOriginalWord) => {\r\n    let convert_target = targetText;\r\n    if (!checkTransOriginalWord.checked && transMode.resultLan == \"ko\") { // 일본어 발음을 알려고 한다면\r\n      convert_target = convert_Pronunciation(targetText, hiragana_ko, hiragana, checkTransOriginalWord.checked);\r\n    }\r\n    return convert_target;\r\n  }\r\n\r\n  const setCookieAndResult = (rs) => {\r\n    let tempRs = {\r\n      japanese_rs: rs.originalJapanese_rs != \"\" ? rs.originalJapanese_rs : rs.japanese_rs,\r\n      korean_rs: rs.originalKorean_rs != \"\" ? rs.originalKorean_rs : rs.korean_rs,\r\n    }\r\n    setRsCounter(rsCounter + 1);\r\n    Cookies.save(\"rs\" + Number(rsCounter + 1), tempRs);\r\n    Cookies.save(\"rsCounter\", rsCounter);\r\n    setResult(rs);\r\n  }\r\n\r\n  const jaMode_OriginalTranslate = (originalText, convert_target, rs) => {\r\n    const url = server_URL + `/translate?text=${convert_target}`;\r\n\r\n    fetch(url)\r\n      .then((res) => {\r\n        return res.json()\r\n      }).then((rs) => {\r\n        rs.originalJapanese_rs = originalText;\r\n        rs.originalKorean_rs = \"\";\r\n        rs.korean_rs = rs.message.result.translatedText;\r\n        rs.japanese_rs = convert_Pronunciation(convert_target, hiragana, hiragana_ko, true);\r\n        setCookieAndResult(rs);\r\n      })\r\n  }\r\n\r\n  const jaMode_Translate = (doc, rs, backupText) => {\r\n    rs.japanese_rs = backupText;\r\n    if (doc.querySelectorAll(\".txt_search\").length > 1) {\r\n      rs.korean_rs = !checkOnlyJapanese(doc.querySelectorAll(\".txt_search\")[1].innerText) ? // 만약 일본어가 들어있는게 아니라면 두번째 의미까지 추가해줌\r\n        doc.querySelectorAll(\".txt_search\")[1].innerText + \", \" : \"\";\r\n    }\r\n    rs.korean_rs += `${doc.querySelectorAll(\".txt_search\")[0].innerText}`;\r\n\r\n    return rs;\r\n  }\r\n\r\n  const koMode_translate = (doc, rs) => {\r\n    let parsingRs = doc.querySelectorAll(\".kujk_type > .search_word > .tit_searchword > .txt_searchword\");\r\n    if(parsingRs.length < 1){\r\n      parsingRs = doc.querySelectorAll(\".kukj_type > .list_search > li > .txt_search\");\r\n    }\r\n    \r\n    rs.japanese_rs = parsingRs[0].innerText;\r\n    rs.korean_rs = convert_Pronunciation(rs.japanese_rs + \"t\", hiragana, hiragana_ko, false);\r\n    rs.japanese_rs = convert_Pronunciation(rs.japanese_rs, [], [], false); // 한자와 일본어를 분리하는 작업\r\n    \r\n    return rs;\r\n  }\r\n\r\n  // input에 입력된 데이터를 번역시켜주는 이벤트\r\n  const translate = () => {\r\n\r\n    const targetText = document.getElementById(\"translate-body-workingArea-inputArea-inputTarget\").value;\r\n    if (targetText.length < 1) {\r\n      return;\r\n    }\r\n\r\n    const checkTransOriginalWord = document.getElementById(\"translate-body-workingArea-inputArea-checkTransOriginalWord\");\r\n    let rs = {\r\n      japanese_rs: \"\",\r\n      originalJapanese_rs: \"\",\r\n      korean_rs: \"\",\r\n      originalKorean_rs: \"\"\r\n    }\r\n\r\n    let convert_target = checkMode(targetText, checkTransOriginalWord);\r\n\r\n    if (checkTransOriginalWord.checked && transMode.resultLan == \"ko\") { // 일본어 그대로 변역할려고 한다면\r\n      jaMode_OriginalTranslate(targetText, convert_target, checkTransOriginalWord, rs)\r\n    }\r\n    else {\r\n      const url = server_URL + `/findWord/?q=${convert_target}`;\r\n\r\n      fetch(url)\r\n          .then(res => {\r\n            return res.text();\r\n          }).then(html => {\r\n            let parser = new DOMParser();\r\n            let doc = parser.parseFromString(html, \"text/html\");\r\n            \r\n            if(transMode.resultLan == \"ja\"){ // 한국어를 일본어로\r\n              rs.originalKorean_rs = targetText;\r\n              rs = koMode_translate(doc, rs);\r\n            }\r\n            else{\r\n              rs = jaMode_Translate(doc, rs, convert_target); // 한국어 발음 일본어를 일본어로\r\n            }\r\n\r\n            setCookieAndResult(rs);\r\n          }).catch((err) => {\r\n            alert(err);\r\n          })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"TranslateApp\">\r\n      <Head title={\"TranslateMode\"} link=\"/\"></Head>\r\n      <Neck isSmallScreen={isSmallScreen}></Neck>\r\n      <Body changeMode={changeMode} translate={translate} transMode={transMode} result={result}></Body>\r\n    </div>\r\n  );\r\n}\r\nexport default TranslateApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}